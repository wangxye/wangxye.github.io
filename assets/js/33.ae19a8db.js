(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{314:function(e,t,s){"use strict";s.r(t);var a=s(4),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"mit6-824-2020-lab2a-leader-election-and-heartbeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mit6-824-2020-lab2a-leader-election-and-heartbeat"}},[e._v("#")]),e._v(" MIT6.824-2020 Lab2A Leader Election and heartbeat")]),e._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),s("p",[e._v("本文是本人学习"),s("code",[e._v("MIT 6.824 Lab 2A")]),e._v("的笔记，包含自己一些实现和理解。")]),e._v(" "),s("p",[s("code",[e._v("Lab 1")]),e._v("的说明在 "),s("a",{attrs:{href:"http://nil.csail.mit.edu/6.824/2020/labs/lab-raft.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lab2 Notes"),s("OutboundLink")],1),e._v("，需要阅读论文"),s("a",{attrs:{href:"http://nil.csail.mit.edu/6.824/2020/papers/raft-extended.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Raft"),s("OutboundLink")],1),e._v("。请以这篇说明和论文为主，以本文为辅。在阅读本文之前，务必先通读这篇说明和论文。若实在无法阅读英文，再姑且直接阅读本文。")]),e._v(" "),s("p",[e._v("本文代码中各种定义和调用非常复杂，很难三言两语说清楚。如果都要一行一行解释，这篇文章篇幅就太太太长了。在本文中呈现代码时，代码中肯定有未解释过的部分，甚至可能占到代码的主要篇幅。请你不要担心，也不要太早地刨根问底，文章中呈现的代码块都只是起到解释说明作用，更多算伪代码，而不是真正运行的代码。")]),e._v(" "),s("p",[e._v("要获得整理好、可直接运行的代码，请看"),s("a",{attrs:{href:"https://github.com/wangxye/MIT6.824",target:"_blank",rel:"noopener noreferrer"}},[e._v("我的GitHub仓库"),s("OutboundLink")],1),e._v("(最好不要)。")]),e._v(" "),s("h2",{attrs:{id:"思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[e._v("#")]),e._v(" 思路")]),e._v(" "),s("h3",{attrs:{id:"任务总览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#任务总览"}},[e._v("#")]),e._v(" 任务总览")]),e._v(" "),s("p",[s("code",[e._v("Lab 2A")]),e._v("主要代码写在文件"),s("code",[e._v("src/raft/raft.go")]),e._v("。目录"),s("code",[e._v("src/raft")]),e._v("下的其它文件都是为"),s("strong",[e._v("测试")]),e._v("服务的，测试主要流程在"),s("code",[e._v("test_test.go")]),e._v("中：首先 "),s("code",[e._v("raft")]),e._v(" 启动，在"),s("code",[e._v("Make")]),e._v(" 中做初始化，一开始所有的"),s("code",[e._v("server")]),e._v("都是"),s("code",[e._v("follower")]),e._v("，并且每个"),s("code",[e._v("server")]),e._v("会随机分配一个选举超时时间，同时所有的"),s("code",[e._v("server")]),e._v("都有相同的心跳间隔时间。")]),e._v(" "),s("p",[s("code",[e._v("RequestVote")]),s("strong",[e._v("索取选票")]),e._v("，"),s("code",[e._v("AppendEntries")]),e._v("实现"),s("strong",[e._v("心跳信号")]),e._v("。")]),e._v(" "),s("p",[e._v("和"),s("code",[e._v("Lab 2A")]),e._v("有关的3个测试，难度由小到大，主要如下：")]),e._v(" "),s("p",[s("code",[e._v("TestInitialElection")]),e._v("测试启动后"),s("code",[e._v("Raft")]),e._v("集群是否能够选出一个"),s("code",[e._v("leader")]),e._v("，并检查在网络稳定的情况，也就是不应该发生心跳信号等待超时的情况下，是否能保持原来的"),s("code",[e._v("leader")]),e._v("和"),s("code",[e._v("term")]),e._v("状态不变。")]),e._v(" "),s("p",[s("code",[e._v("TestReElection")]),e._v("测试在上一个测试的基础上，检查发生"),s("code",[e._v("leader")]),e._v("离线情况的行为。先等待集群产生一个"),s("code",[e._v("leader")]),e._v("，然后让这个"),s("code",[e._v("leader")]),e._v("离线，检查集群能否再产生一个"),s("code",[e._v("leader")]),e._v("。若能，令原来的"),s("code",[e._v("leader")]),e._v("上线，检查"),s("code",[e._v("leader")]),e._v("不应该发生变化，因为后来的"),s("code",[e._v("leader")]),e._v("的"),s("code",[e._v("term")]),e._v("大于原来的"),s("code",[e._v("leader")]),e._v("。如果满足要求，令一个"),s("code",[e._v("leader")]),e._v("和一个"),s("code",[e._v("follower")]),e._v("离线，检查此时集群不应该再产生新"),s("code",[e._v("leader")]),e._v("，因为超过半数的服务器离线了。")]),e._v(" "),s("p",[s("code",[e._v("TestManyElections")]),e._v("测试是上一个测试的现实版本。每次随机令2个服务器离线，检查集群状态是否符合要求。如此重复10次。为了确保测试的准确性，我把这个重复次数改成1000,只需要改变量"),s("code",[e._v("iters")]),e._v("就可以。10次通过了是运气好，1000次通过了就是真的对了。")]),e._v(" "),s("h3",{attrs:{id:"实现流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现流程"}},[e._v("#")]),e._v(" 实现流程")]),e._v(" "),s("p",[s("strong",[e._v("状态机转化")])]),e._v(" "),s("p",[e._v("系统是有限状态机，就是说系统对外只表现出有限的几个状态，状态之间相互转移的中间状态不可见。外界操作使得系统从一个状态转移到另一种状态，转移过程中进行一些处理。"),s("strong",[e._v("外界操作")]),e._v("可以相互平行地理解为：")]),e._v(" "),s("ul",[s("li",[e._v("系统检测到发生了某件事情，系统应对这件事情改变自己的状态。")]),e._v(" "),s("li",[e._v("系统接收到来自外界的指令，按照指令改变自己的状态。")])]),e._v(" "),s("p",[e._v("在本次实验中，"),s("code",[e._v("Raft")]),e._v("集群都会或多或少涉及到多种角色的转化，因此，为了保证领袖选举与在线领导心跳控制，最好为每一种角色写一个转换函数："),s("code",[e._v("convertToFollower")]),e._v("、"),s("code",[e._v("convertToCandidate")]),e._v("、"),s("code",[e._v("convertToLeader")]),e._v("。")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/6.824-lab2A-1.png",alt:"6.824-lab2A-1.png"}})]),e._v(" "),s("p",[s("strong",[e._v("[注]")]),e._v("：由于该转换过程涉及到对"),s("code",[e._v("Raft")]),e._v("对象的参数修改，所以需要我们注意死锁发生和重复的锁请求。")]),e._v(" "),s("p",[e._v("无论采用多么非常复杂的加锁机制，都是为了实现一个状态机。与其采用超级烦人的锁、条件变量、或者"),s("code",[e._v("chan")]),e._v("，还不如直接写一个简单的状态机框架。")]),e._v(" "),s("p",[e._v("状态机的主体是一个循环取指令、执行指令的循环，指令就是可能让状态机的状态发生变化的输入。在执行指令的时候给状态上锁。")]),e._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("func (sm *StateMachine) machineLoop() {\n    for {\n        trans := &lt;-sm.transCh\n        sm.rwmu.Lock()\n        dest := trans.transfer(sm.curState)\n        if dest != notTransferred {\n            sm.stateWriter.writeState(dest)\n        }\n        sm.rwmu.Unlock()\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("p",[e._v("给"),s("code",[e._v("chan")]),e._v("发射实现了"),s("code",[e._v("transfer")]),e._v("方法的对象，作为"),s("em",[e._v("指令")]),e._v("。")]),e._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("type StateMachine struct {\n    ...\n    transCh          chan SMTransfer\n    ...\n}\n\nfunc (sm *StateMachine) issueTransfer(trans SMTransfer) {\n    go func() {\n        sm.transCh &lt;- trans\n    }()\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("p",[s("strong",[e._v("异步请求")])]),e._v(" "),s("p",[e._v("发送"),s("code",[e._v("RequestVote")]),e._v("应该是异步的，主流程不应该阻塞到所有"),s("code",[e._v("reply")]),e._v("都收到再继续进行。原因有一下两个方面。")]),e._v(" "),s("ol",[s("li",[e._v("不需要收到所有选票就可以选出"),s("code",[e._v("leader")]),e._v("，只需要超过半数。")]),e._v(" "),s("li",[e._v("RPC放弃发送的时间太长了。")]),e._v(" "),s("li",[e._v("最重要的，论文的表述是"),s("code",[e._v("election timeout")]),e._v("，说明在"),s("code",[e._v("follower")]),e._v("和"),s("code",[e._v("candidate")]),e._v("情况下，发送"),s("code",[e._v("RequestVote")]),e._v("的时机都是计时器到点。")])]),e._v(" "),s("p",[e._v("所以，你的发送大概应该长这样。")]),e._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("for i := 0; i &lt; rf.peerCount(); i++ {\n    if i == rf.me {\n        // 不发给自己\n        continue\n    }\n    go rf.sendRequestVote(i)\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[s("code",[e._v("AppendEntries")]),e._v("也是这个道理。你可以在另一个线程中等待这些线程结束，这样也不会阻塞到主流程。可以像这样。")]),e._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// On conversion to candidate, start election\n// Increment currentTerm\ncurrentTerm++\n// Vote for self\nvotedFor = trans.machine.raft.me\n// Reset election timer\nelectionTimer.setElectionWait()\nelectionTimer.start()\n\n// Send RequestVote RPCs to all other servers\ngo trans.machine.raft.doElect()\n// 不阻塞的返回\nreturn StartElectionState\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("p",[s("strong",[e._v("随机超时")])]),e._v(" "),s("p",[e._v("在选举领袖中，为了防止瓜分选票的情况发生，需要随机设置不同的超时时间，论文建议是150-300ms ，所以建议写个函数，用时间戳做随机种子，每次生成不同的超时时间。")]),e._v(" "),s("p",[e._v("在心跳间隔中，要求心跳不超过10次/s，也就是不小于100ms/次，而心跳时间间隔应该小于选举超时时间，因此设置为100到150ms之间。")]),e._v(" "),s("p",[s("strong",[e._v("事件触发")])]),e._v(" "),s("p",[e._v("根据论文解析，我们需要长时间运行的"),s("code",[e._v("gorutinue")]),e._v(" （可以简单理解为死循环）来处理事件和统计选举超时。此处可以使用管道来协调。在开始选举时，当某一台"),s("code",[e._v("server")]),e._v(" 的选举超时计时先倒数完，这台"),s("code",[e._v("server")]),e._v("按照规则，先给变成"),s("code",[e._v("candidate")]),e._v("，term加一，给自己投票，重置选举超时计时器，然后让其他"),s("code",[e._v("server")]),e._v("投票。只要超过半数，那么就当选"),s("code",[e._v("leader")]),e._v("，开始给其余节点发心跳。")]),e._v(" "),s("h2",{attrs:{id:"常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[e._v("#")]),e._v(" 常见问题")]),e._v(" "),s("ul",[s("li",[e._v("没有理解清楚算法流程不要硬上，多看看论文，反复琢磨总是能懂的！")]),e._v(" "),s("li",[e._v("不要先追求"),s("strong",[e._v("效率")]),e._v("或"),s("strong",[e._v("优雅")]),e._v("，很多错误就是这么来的，先追求"),s("strong",[e._v("正确！")])]),e._v(" "),s("li",[e._v("多线程代码不要用"),s("strong",[e._v("断点调试")]),e._v("了，可以尝试在终端"),s("code",[e._v("print")]),e._v("一些信息，像这样：")])])])}),[],!1,null,null,null);t.default=n.exports}}]);